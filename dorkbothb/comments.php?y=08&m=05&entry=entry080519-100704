      <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml">
    <head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />

    <!-- Meta Data -->
    <meta name="generator" content="Simple PHP Blog" />
    <link rel="alternate" type="application/rss+xml" title="Get RSS 2.0 Feed" href="rss.php" />
    <link rel="alternate" type="application/rdf+xml" title="Get RDF 1.0 Feed" href="rdf.php" />
    <link rel="alternate" type="application/atom+xml" title="Get Atom 0.3 Feed" href="atom.php" />

    <!-- Meta Data -->
    <!-- http://dublincore.org/documents/dces/ -->
    <meta name="dc.title"       content="Dorkbot HB" />
    <meta name="author"         content="Milena Reichel" />
    <meta name="dc.creator"     content="Milena Reichel" />
    <meta name="dc.subject"     content="" />
    <meta name="keywords"       content="" />
    <meta name="dc.description" content="" />
    <meta name="description"    content="" />
    <meta name="dc.type"        content="weblog" />
    <meta name="dc.type"        content="blog" />
    <meta name="resource-type"  content="document" />
    <meta name="dc.format"      scheme="IMT" content="text/html" />
    <meta name="dc.source"      scheme="URI" content="http://dorkbot.org/dorkbothb/index.php" />
    <meta name="dc.language"    scheme="RFC1766" content="Array" />
    <meta name="dc.coverage"    content="global" />
    <meta name="distribution"   content="GLOBAL" />
    <meta name="dc.rights"      content="" />
    <meta name="copyright"      content="" />

    <!-- Robots -->
    <meta name="robots" content="ALL,INDEX,FOLLOW,ARCHIVE" />
    <meta name="revisit-after" content="7 days" />

    <!-- Fav Icon -->
    <link rel="shortcut icon" href="interface/favicon.ico" />

    <link rel="stylesheet" type="text/css" href="themes/default/style.css" />

    
<script type="text/javascript">
	<!--
	// BLOG SETTINGS
	var blogSettings = Array();
	blogSettings['theme'] = 'default';
	blogSettings['img_path'] = 'themes/default/images/';
	blogSettings['content_width'] = 550;
	blogSettings['menu_width'] = 200;
	-->
</script>
    <script language="javascript" src="scripts/sb_javascript.js" type="text/javascript"></script>

      <style type="text/css">
  body {
    background-color: #E6BDD4;
    color: #854F8E;
  }

  hr  
  {
    color: #D9D9D9;
    background-color: #D9D9D9;
  }

  #header_image {
    border-color: #5C4050;
  }

  #header {
    border-color: #5C4050;
    color: #FFFFFF;
    background-color: #1C0C15;
  }

  #footer {
    color: #666666;
    background: #EEEEEE;
    border-top: 1px solid #5C4050;
  }

  h1, h2, h3, h4, h5, h6 {
    color: #4C2154;
  }

  #maincontent .blog_subject {
    color: #4C2154;
  }

  #maincontent .blog_date {
    color: #999999;
  }

  #maincontent .blog_categories {
    color: #999999;
  }

  #maincontent .blog_body_solid  {
    color: #ff0000;
    background-color: #E6BDD4;
    border-color: #ff0000;
  }
  
  #sidebar .menu_body {
    border-color: #D9D9D9;
  }

  a:link, a:visited {
    color: #71224F;
  }

  a:hover {
    color: #511A39;
  }

  a:active {
    color: #903368;
  }
  
  pre {
    width: 512px;
    border-color: #D9D9D9;
  }
</style>

  
<script type="text/javascript">
	<!--
	
	// Insert Style Tags
	function ins_styles(theform,sb_code,prompt_text,tag_prompt) {
		// Insert [x]yyy[/x] style markup
		
		// Get selected text
		var selected_text = getSelectedText(theform);
		
		if (selected_text == '') {
			// Display prompt if no text is selected
			var inserttext = prompt( 'Enter the text to be formatted:'+"\n["+sb_code+"]xxx[/"+sb_code+"]", '' );
			if ( (inserttext != null) ) {
				insertAtCaret(theform, "["+sb_code+"]"+inserttext+"[/"+sb_code+"]");
				theform.focus();
			}
		} else {
			// Insert text automatically around selection
			insertAtCaret(theform, "["+sb_code+"]"+selected_text+"[/"+sb_code+"]");
			theform.focus();
		}
	}
	
	// Insert Style Tags
	function ins_style_dropdown(theform, sb_code) {
		// Insert [sb_code]xxx[/sb_code] style markup
		
		if ( sb_code != '-'+'-' ) {
			// Get selected text
			var selected_text = getSelectedText(theform);
		
			if (selected_text == '') {
				prompt_text = '[' + sb_code + ']xxx[/' + sb_code + ']';
				user_input = prompt( prompt_text, '' );
				if ( (user_input != null) ) {
					insertAtCaret(theform, '['+sb_code+']'+user_input+'[/'+sb_code+']');
					theform.focus();
				}
			} else {
				// Insert text automatically around selection
				insertAtCaret(theform, "["+sb_code+"]"+selected_text+"[/"+sb_code+"]");
				theform.focus();
			}				
		}
	}
	
	// Insert Image Tag
	function ins_image(theform,prompt_text) {
		// Insert [x]yyy[/x] style markup
		inserttext = prompt('Enter the URL for the image:'+"\n[img="+prompt_text+"xxx]",prompt_text);
		if ((inserttext != null) && (inserttext != "")) {
			insertAtCaret(theform, "[img="+inserttext+"]");
		}
		theform.focus();
	}
	
	// Insert Image Tag
	function ins_image_v2(theform) {
		image_url = prompt('Enter the URL for the image:'+'\n[img=http://xxx] or [img=xxx]\n\nOptional:\nwidth=xxx height=xxx popup=true/false float=left/right','http://');
		if ((image_url != null) && (image_url != '')) {
			// Optional
			image_width = prompt('Width (Optional):'+'\n[img=xxx width=xxx]','');
			image_height = prompt('Height (Optional):'+'\n[img=xxx height=xxx]','');
			image_popup = prompt('View full-size in pop-up when clicked (Optional):'+'\n[img=xxx popup=true/false]', '');
			image_float = prompt('Float (Optional):'+'\n[img=xxx float=left/right]','');
			
			str = '[img='+image_url;
			if ((image_width != null) && (image_width != '')) {
				str += ' width='+image_width;
			}
			if ((image_height != null) && (image_height != '')) {
				str += ' height='+image_height;
			}
			if ((image_popup != null) && (image_popup != '')) {
				image_popup.toLowerCase;
				if ( image_popup == 'true' || image_popup == 'false' ) {
					str += ' popup='+image_popup;
				}
			}
			if ((image_float != null) && (image_float != '')) {
				image_float.toLowerCase;
				if ( image_float == 'left' || image_float == 'right' ) {
					str += ' float='+image_float;
				}
			}
			str += ']';
			
			insertAtCaret(theform, str);
			theform.focus();
		
		}
	}
	
	// Insert Image Dropdown Menu
	function ins_image_dropdown(theform,theImage) {
		if (theImage.value != '-'+'-') {
			insertAtCaret(theform, theImage.value);
			theform.focus();
		}
	}
	
	// Insert URL Tag
	function ins_url(theform) {
	
		// inserts named url link - [url=mylink new=true]text[/url]
		link_url = prompt('Enter the full URL for the link:'+'\n[url=xxx][/url]',"http://");
		if ( (link_url != null) ) {
		
			// Get selected text
			var link_text = getSelectedText(theform);
			if (link_text == '') {
				// Display prompt if no text is selected
				link_text = prompt('Enter the text to be displayed for the link (Optional):'+'\n[url=]xxx[/url]',"");
			}
			if ( (link_text == null) || (link_text == '') ) {
				link_text = link_url;
			}
			link_target = prompt('Open URL in new window (Optional):'+'\n[url= new=true/false][/url]','');
			str = '[url='+link_url;
			if ((link_target != null) && (link_target != '')) {
				link_target.toLowerCase;
				if ( link_target == 'true' || link_target == 'false' ) {
					str += ' new='+link_target;
					
				}
			}
			str += ']'+link_text+'[/url]';
			
			insertAtCaret(theform, str);
			theform.focus();
		}
	}
	
	// Insert URL Tag
	function ins_url_no_options(theform) {
		// inserts named url link - [url=mylink new=true]text[/url]
		link_url = prompt('Enter the full URL for the link:'+'\n[url=xxx][/url]',"http://");
		if ( (link_url != null) ) {
			// Get selected text
			var link_text = getSelectedText(theform);
			if (link_text == '') {
				// Display prompt if no text is selected
				link_text = prompt('Enter the text to be displayed for the link (Optional):'+'\n[url=]xxx[/url]',"");
			}
			if ( (link_text == null) || (link_text == '') ) {
				link_text = link_url;
			}
			str = '[url='+link_url+']'+link_text+'[/url]';
			
			insertAtCaret(theform, str);
			theform.focus();
		}
	}
	
	//Insert Emoticon
	function ins_emoticon(theform, emoticon) {
		insertAtCaret(theform, emoticon);
		theform.focus();
	}
	
	// Validate the Form
	function validate(theform) {
		if (theform.blog_text.value=="" || theform.blog_subject.value=="") {
			alert("Please complete the Name, Comment and Anti-Spam fields.");
			return false;
		} else {
			return true;
		}
	}
	
	// Validate the Form
	function validate_static(theform) {
		if (theform.blog_text.value=="" || theform.blog_subject.value=="" || theform.file_name.value=="" ) {
			alert("Please complete the Name, Comment and Anti-Spam fields.");
			return false;
		} else {
			return true;
		}
	}

	// From:
	// http://parentnode.org/javascript/working-with-the-cursor-position/
	function insertAtCaret2(obj, text) {
		if (document.selection && document.selection.createRange) {
			// Internet Explorer 4.0x
			
			obj.focus();
			var orig = obj.value.replace(/\r\n/g, "\n"); // IE Bug
			var range = document.selection.createRange();
	
			if(range.parentElement() != obj) {
				return false;
			}
	
			range.text = text;
			
			var actual = tmp = obj.value.replace(/\r\n/g, "\n");
	
			for(var diff = 0; diff < orig.length; diff++) {
				if(orig.charAt(diff) != actual.charAt(diff)) break;
			}
	
			for(var index = 0, start = 0; 
				tmp.match(text.toString()) 
					&& (tmp = tmp.replace(text.toString(), "")) 
					&& index <= diff; 
				index = start + text.toString().length
			) {
				start = actual.indexOf(text.toString(), index);
			}
		} else if (obj.selectionStart >= 0) {
			// FireFox & Safari
			var start = obj.selectionStart;
			var end   = obj.selectionEnd;
	
			obj.value = obj.value.substr(0, start) 
				+ text 
				+ obj.value.substr(end, obj.value.length);
		}
		
		if (start != null) {
			setCaretTo(obj, start + text.length);
		} else {
			obj.value += text;
		}
	}
	
	function getSelectedText(obj) {
		if (document.selection && document.selection.createRange) {
			// Internet Explorer 4.0x
			
			obj.focus();
			var orig = obj.value.replace(/\r\n/g, "\n"); // IE Bug
			var range = document.selection.createRange();
			
			if (range.parentElement() != obj) {
				return '';
			}
			
			txt = range.text;
			
			return txt;
		} else if (obj.selectionStart >= 0) {
			// FireFox & Safari
			var start = obj.selectionStart;
			var end    = obj.selectionEnd;
			var txt    = obj.value.substr(start, end-start);
			
			return txt;
		} else {
			return '';
		}
	}
	
	function setCaretTo(obj, pos) {
		if(obj.createTextRange) {
			var range = obj.createTextRange();
			range.move('character', pos);
			range.select();
		} else if(obj.selectionStart) {
			obj.focus();
			obj.setSelectionRange(pos, pos);
		}
	}
	
	function getSel() {
		var txt = '';
		var foundIn = '';
		if (window.getSelection) {
			// the alternative code
			txt = window.getSelection();
			foundIn = 'window.getSelection()';
		} else if (document.getSelection) {
			// Navigator 4.0x
			txt = document.getSelection();
			foundIn = 'document.getSelection()';
		} else if (document.selection) {
			// Internet Explorer 4.0x
			txt = document.selection.createRange().text;
			foundIn = 'document.selection.createRange()';
		} else {
			return;
		}
		return txt;
	}

	function insertAtCaret(obj, text) {
		var mytext;
		obj.focus();
		
		if (document.selection) {
			// 'Code For IE'
			text = ' ' + text + ' ';
			if (obj.createTextRange && obj.caretPos) {
				var caretPos = obj.caretPos;
				caretPos.text = caretPos.text.charAt(caretPos.text.length - 1) == ' ' ? text + ' ' : text;
				return;
			}
		} else if (obj.selectionStart!==false) {
			// 'Code for Gecko'
			var start = obj.selectionStart;
			var end   = obj.selectionEnd;
			
			obj.value = obj.value.substr(0, start) + text + obj.value.substr(end, obj.value.length);
		}
		
		if (start != null) {
			setCaretTo(obj, start + text.length);
		} else {
			obj.focus();
			obj.value += text;
		}
	}

	// Insert at Caret position. Code from
	// http://www.faqts.com/knowledge_base/view.phtml/aid/1052/fid/130
	function storeCaret(textEl) {
		if (textEl.createTextRange) textEl.caretPos = document.selection.createRange().duplicate();
	}

	// Validate the Form for Blocks
	function validate_block(theform) {
		if (theform.text.value=="" || theform.block_name.value=="") {
			alert("Please complete the Name, Comment and Anti-Spam fields.");
			return false;
		} else {
			return true;
		}
	}
	-->
</script>
    <script type="text/javascript">
    <!--
    // Validate the Form
    function validate_comment(theform) {
      if ( theform.comment_text.value=="" || theform.comment_name.value=="" || theform.comment_capcha.value=="" ) {
        alert("Please complete the Name, Comment and Anti-Spam fields.");
        return false;
      } else {
        return true;
      }
    }
    -->
  </script>

  <title>Dorkbot HB - Dorkbot meeting - Marble Control</title></head>
      <body leftmargin="0" topmargin="0" marginheight="0" marginwidth="0">
      <br />
      <table border="0" width="550" cellspacing="0" cellpadding="0" align="center" style="border: 1px solid #5C4050;">
        <tr align="left" valign="top">
          <td bgcolor="#1C0C15">
            <div id="header">
              Dorkbot HB<br />
            </div>
          </td>
        </tr>
        <tr align="left" valign="top">
          <td bgcolor="#FFFFFF">
            <div id="maincontent">
              
<div class="blog_subject">Dorkbot meeting - Marble Control<a name="entry080519-100704">&nbsp;</a></div>
<div class="blog_byline">Monday, May 19, 2008, 10:07 AM</div>
		Our second Dorkbot HB meeting will again take place in collaboration with the DiMeB Colloquium at the University of Bremen.<br /><br />We hope to see you at<br /><br />	27th of May<br />	5 pm (ct) <br />	<br />at the University of Bremen, MZH 8100.<br /><br />This time Benjamin Walther-Franks, Sebastian Feige, Christoph Grimmer und Lasse Schwarten from the graduate school &#039;Advances in Digital Media&#039; (http://medien.informatik.uni-bremen.de/en/graduate_school/) present their Marble Control project.<br /><br />MarbleControl<br />Applications on mobile devices (in our case an example of a mobile personal media assistant) are controlled through tilting the whole device, the cursor behaves like a marble.<br />The current solution includes an Arduino board attached to the mobile device via bluetooth.<br clear="all" />
<hr />
<p />
<div class="blog_subject">Comments<a name="">&nbsp;</a></div>

    <h2>Add Comment</h2>
    Fill out the form below to add your own comments.<p />

    <form action='comment_add_cgi.php' method="post" name="vbform" onsubmit="return validate_comment(this)">
      <input type="hidden" name="y" value="08" />
      <input type="hidden" name="m" value="05" />
      <input type="hidden" name="entry" value="entry080519-100704" />

      <label for="comment_name">Your Name:</label><br /><input type="text" name="comment_name" id="comment_name" value="" autocomplete="off" /><br /><label for="comment_email">Email:</label><br /><input type="text" name="comment_email" id="comment_email" value="" autocomplete="off" /><br /><label for="comment_url">URL:</label><br /><input type="text" name="comment_url" id="comment_url" value="" autocomplete="off" /><br /><label for="comment_remember">Remember me:<input type="checkbox" name="comment_remember" id="comment_remember" value="1" autocomplete="off" /></label><br /><br /><input type="hidden" name="user_ip" id="user_ip" value="207.241.228.169" autocomplete="off" />
      <!-- NEW -->
      Insert Special:<br />
      <input type="button" class="bginput" value=" b " onclick="ins_styles(this.form.comment_text,'b','');" /><input type="button" class="bginput" value=" i " onclick="ins_styles(this.form.comment_text,'i','');" /><input type="button" class="bginput" value="url" onclick="ins_url_no_options(this.form.comment_text);" />
      <select name="style_dropdown" onchange="ins_style_dropdown(this.form.comment_text,this.form.style_dropdown.value);">
        <option label="--" value="--">--</option>
        <option label="[strong]xxx[/strong]" value="strong">[strong]xxx[/strong]</option><option label="[b]xxx[/b]" value="b">[b]xxx[/b]</option><option label="[em]xxx[/em]" value="em">[em]xxx[/em]</option><option label="[i]xxx[/i]" value="i">[i]xxx[/i]</option>      </select>
      <input type="button" class="bginput" value="ok" onclick="ins_style_dropdown(this.form.comment_text,this.form.style_dropdown.value);" /><br /><br />

      
      
      <label for="comment_text">Comment:</label><br />
      <textarea style="width: 512px;" id="comment_text" name="comment_text" rows="20" cols="50" autocomplete="off"></textarea><br /><br />

      <!-- Not logged in! Show capcha --><label for="comment_capcha">Anti-Spam: Enter <b>&#49;&#54;&#49;&#48;&#53;&#53;</b></label><br /><input type="text" name="comment_capcha" id="comment_capcha" value="" autocomplete="off" maxlength="6" /><br /><br />
      <input type="submit" name="submit" value="&nbsp;Post Comment&nbsp;" />

    </form>

    
<hr />
            </div>
          </td>
        </tr>
        <tr align="left" valign="top">
          <td bgcolor="#EEEEEE">
            <div id="footer"> - Page Generated in 0.0341 seconds&nbsp;|&nbsp;Site Views: 9335</div>
          </td>
        </tr>
      </table>
      <br />
    </body>
    </html>
